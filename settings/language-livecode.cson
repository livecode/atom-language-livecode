# If you want some examples of settings, check out:
# https://github.com/atom/language-gfm/blob/master/settings/gfm.cson

# LiveCode Builder
##################

'.source.lcb':
  'editor':
    'commentStart': '-- '
    'tabLength': 3
    'foldEndPattern': '^\\s*end\\b'
    'increaseIndentPattern': '^\\s*(((public\\s*)?handler)|if|repeat|else)\\b'
    'decreaseIndentPattern': '^\\s*(end(\\s*(if|repeat|handler))?|else(\\s*if)?)\\b'

  # # Settings for autocomplete plus support
  #  'autocomplete':
  #    'symbols':
  #      'function':
  #        'selector': '.function.name'
  #        'typePriority': 6
  #      'variable':
  #        'selector': '.variable'
  #      'typePriority': 5
  #      'constant':
  #        'selector': '.constant.other.variable'
  #        'typePriority': 4
  #        'suggestions': [
  #          'true'
  #          'false'
  #        ]
  #      'type':
  #        'selector': '.type.name'
  #        'typePriority': 3
  #        'suggestions': [
  #          'nothing'
  #          'any'
  #          'Boolean'
  #          'Number'
  #          'Integer'
  #          'Real'
  #          'String'
  #          'List'
  #          'Array'
  #        ]
  #      'keyword':
  #        'selector': '.keyword, .storage'
  #        'typePriority': 2
  #      '': # Catch-all completion
  #        'selector': '.source.lcb'
  #        'typePriority': 1

# LiveCode server
#################

".source.iRev":
  editor:
    increaseIndentPattern: "(^on\\s+?.+)|(^command\\s+?.+)|(^function\\s+?.+)|(\\s*if\\s+?.+)|(\\s*else)|(\\s*repeat\\s+?.+)|(switch\\s+?.+)|(case\\s+?.+)|(\\s*(?<!end )try$)|(\\s*catch\\s+?.+)"
    decreaseIndentPattern: "(\\s*end\\s+?.+)|(\\s*break$)|(\\s*else$)|(\\s*catch\\s+?.+)"
    completions: [
      "abbr"
      "abbrev"
      "abbreviated"
      "abs()"
      "acos()"
      "add"
      "after"
      "and"
      "annuity()"
      "any"
      "arrayDecode()"
      "arrayEncode()"
      "ascending"
      "asin()"
      "atan()"
      "atan2()"
      "average()"
      "averageDeviation()"
      "avg()"
      "avgDev()"
      "base64Decode()"
      "base64Encode()"
      "baseConvert()"
      "before"
      "begins with"
      "binary"
      "binaryDecode()"
      "binaryEncode()"
      "binfile"
      "bitAnd"
      "bitNot"
      "bitOr"
      "bitXor"
      "break"
      "breakpoint"
      "buildNumber()"
      "byteOffset()"
      "cachedURLs()"
      "cancel"
      "case"
      "caseSensitive"
      "catch"
      "centuryCutoff"
      "char"
      "chars"
      "charSet"
      "charToNum()"
      "cipherNames()"
      "clear"
      "clear chunk"
      "clear directory"
      "clear file"
      "clear folder"
      "clear URL"
      "clear variable"
      "close file"
      "close process"
      "close socket"
      "codepoint"
      "codepoints"
      "codepointOffset()"
      "codepointProperty()"
      "codepointToNum()"
      "codeunit"
      "codeunits"
      "codeunitOffset()"
      "colon"
      "columnDelimiter"
      "combine"
      "comma"
      "command"
      "commandNames"
      "compound"
      "compress"
      "constant"
      "constantNames"
      "contains"
      "content"
      "convert"
      "convertOctals"
      "cookie"
      "cos"
      "CR"
      "create alias"
      "create directory"
      "create folder"
      "CRLF"
      "date"
      "dateFormat"
      "dateItems"
      "dateTime"
      "decompress"
      "decrypt"
      "decrypt using rsa"
      "default"
      "defaultFolder"
      "delete"
      "delete directory"
      "delete file"
      "delete folder"
      "delete URL"
      "delete variable"
      "descending"
      "detailed"
      "directories"
      "directory"
      "diskSpace"
      "div"
      "divide"
      "DNSServers"
      "do"
      "each"
      "eight"
      "eighth"
      "element"
      "else"
      "empty"
      "encrypt"
      "encrypt using rsa"
      "end"
      "end if"
      "end repeat"
      "end switch"
      "end try"
      "endOfFile"
      "ends with"
      "english"
      "EOF"
      "errorMode"
      "executionContexts"
      "exit"
      "exit repeat"
      "exit switch"
      "exit to top"
      "exp()"
      "exp1()"
      "exp10()"
      "exp2()"
      "extents"
      "false"
      "fifth"
      "file"
      "files"
      "fileType"
      "filter"
      "finally"
      "first"
      "five"
      "flushEvents()"
      "folder"
      "folder"
      "for"
      "forever"
      "format()"
      "formFeed"
      "four"
      "fourth"
      "from"
      "ftp"
      "function"
      "functionNames"
      "get"
      "geometricMean()"
      "global"
      "globalNames"
      "globals"
      "harmonicMean()"
      "hasMemory"
      "header"
      "hostAddress"
      "hostAddressToName()"
      "hostName"
      "hostNameToAddress()"
      "hScroll"
      "http"
      "httpHeaders"
      "https"
      "if"
      "in"
      "include"
      "inline"
      "int1"
      "int1s"
      "int2"
      "int2s"
      "int4"
      "int4s"
      "integer"
      "internet"
      "intersect"
      "into"
      "is"
      "is a"
      "is among"
      "is among the keys of"
      "is an"
      "is in"
      "is not"
      "is not a"
      "is not among"
      "is not among the keys of"
      "is not an"
      "is not in"
      "is not within"
      "is within"
      "isNumber"
      "ISOToMac"
      "it"
      "item"
      "itemDel"
      "itemDelimiter"
      "itemOffset()"
      "items"
      "keys"
      "kill"
      "last"
      "len"
      "length"
      "LF"
      "libURLDownloadToFile"
      "libURLErrorData()"
      "libURLFollowHttpRedirects"
      "libUrlFormData()"
      "libURLftpCommand"
      "libURLftpUpload"
      "libURLftpUploadFile"
      "libURLLastHTTPHeaders()"
      "libURLLastRHHeaders()"
      "libUrlMultipartFormAddPart()"
      "libUrlMultipartFormData()"
      "libURLResetAll"
      "libUrlSetAuthCallback"
      "libURLSetCustomHTTPHeaders"
      "libUrlSetExpect100"
      "libURLSetFTPListCommand"
      "libURLSetFTPMode"
      "libURLSetFTPStopTime"
      "libURLSetStatusCallback"
      "libURLVersion()"
      "line"
      "lineDel"
      "lineDelimiter"
      "linefeed"
      "lineOffset()"
      "lines"
      "ln"
      "ln1"
      "load"
      "local"
      "localNames"
      "log10"
      "log2"
      "long"
      "longFilePath"
      "lower()"
      "machine"
      "macToISO()"
      "markup"
      "matchChunk()"
      "matchText()"
      "matrixMultiply()"
      "max"
      "md5Digest"
      "median()"
      "merge()"
      "mid"
      "middle"
      "millisec"
      "milliseconds"
      "millisecs"
      "min()"
      "mod"
      "monthNames"
      "multiply"
      "new alias"
      "new directory"
      "new folder"
      "nativeCharToNum()"
      "next repeat"
      "nine"
      "ninth"
      "none"
      "normalizeText()"
      "not"
      "null"
      "num"
      "number"
      "numberFormat"
      "numeric"
      "numToChar()"
      "numToCodepoint()"
      "numToNativeChar()"
      "of"
      "offset()"
      "on"
      "one"
      "open file"
      "open process"
      "open socket"
      "openFiles"
      "openProcesses"
      "openProcessIDs"
      "openSockets"
      "or"
      "outputLineEndings"
      "outputTextEncoding"
      "paragraph"
      "paragraphOffset()"
      "param()"
      "paramCount"
      "params"
      "peerAddress()"
      "pendingMessages"
      "pi"
      "platform"
      "popStdDev()"
      "populationStandardDeviation()"
      "populationVariance()"
      "popVariance()"
      "post"
      "prepare"
      "processID"
      "processor"
      "propertyNames"
      "put"
      "quote"
      "random()"
      "randomSeed"
      "read from file"
      "read from process"
      "quiet"
      "read from socket"
      "real4"
      "real8"
      "recursionLimit"
      "rel"
      "relative"
      "rename"
      "repeat"
      "replace"
      "replaceText()"
      "require"
      "resetAll"
      "resolve"
      "result"
      "return"
      "revAddXMLNode"
      "revAppendXML"
      "revCloseCursor"
      "revCloseDatabase"
      "revCommitDatabase"
      "revCopyFile"
      "revCopyFolder"
      "revCopyXMLNode"
      "revCreateXMLTree()"
      "revCreateXMLTreeFromFile()"
      "revCurrentRecord()"
      "revCurrentRecordIsFirst()"
      "revCurrentRecordIsLast()"
      "revDatabaseColumnCount()"
      "revDatabaseColumnIsNull()"
      "revDatabaseColumnLengths()"
      "revDatabaseColumnNamed()"
      "revDatabaseColumnNames()"
      "revDatabaseColumnNumbered()"
      "revDatabaseColumnTypes()"
      "revDatabaseConnectResult()"
      "revDatabaseCursors()"
      "revDatabaseID()"
      "revDatabaseTableNames()"
      "revDatabaseType()"
      "revDataFromQuery()"
      "revdb_closeCursor()"
      "revdb_columnbynumber()"
      "revdb_columncount()"
      "revdb_columnisnull()"
      "revdb_columnlengths()"
      "revdb_columnnames()"
      "revdb_columntypes()"
      "revdb_commit()"
      "revdb_connect()"
      "revdb_connectionerr()"
      "revdb_connections()"
      "revdb_currentrecord()"
      "revdb_cursorconnection()"
      "revdb_cursorerr()"
      "revdb_cursors()"
      "revdb_dbtype()"
      "revdb_disconnect()"
      "revdb_execute()"
      "revdb_isbof()"
      "revdb_iseof()"
      "revdb_movefirst()"
      "revdb_movelast()"
      "revdb_movenext()"
      "revdb_moveprev()"
      "revdb_query()"
      "revdb_querylist()"
      "revdb_recordcount()"
      "revdb_rollback()"
      "revdb_tablenames()"
      "revDeleteAllXMLTrees"
      "revDeleteFolder"
      "revDeleteXMLNode"
      "revDeleteXMLTree"
      "revEndXMLNode"
      "revExecuteSQL"
      "revGetDatabaseDriverPath()"
      "revInsertXMLNode"
      "revMacFromUnixPath()"
      "revMoveFolder"
      "revMoveToFirstRecord"
      "revMoveToLastRecord"
      "revMoveToNextRecord"
      "revMoveToPreviousRecord"
      "revMoveToRecord"
      "revMoveXMLNode"
      "revNumberOfRecords()"
      "revOpenDatabase()"
      "revOpenDatabases()"
      "revPutIntoXMLNode"
      "revQueryDatabaseBlob()"
      "revQueryDatabase()"
      "revQueryIsAtEnd()"
      "revQueryIsAtStart()"
      "revQueryResult()"
      "revRollBackDatabase"
      "revSetDatabaseDriverPath"
      "revSetXMLAttribute"
      "revStartXMLData"
      "revStartXMLNode"
      "revUnixFromMacPath()"
      "revXMLAddDTD"
      "revXMLAttribute()"
      "revXMLAttributes()"
      "revXMLAttributeValues()"
      "revXMLChildContents()"
      "revXMLChildNames()"
      "revXMLCreateTreeFromFileWithNamespaces()"
      "revXMLCreateTreeWithNamespaces()"
      "revXMLDataFromXPathQuery()"
      "revXMLEndTree"
      "revXMLEvaluateXPath()"
      "revXMLFirstChild()"
      "revXMLMatchingNode()"
      "revXMLNextSibling()"
      "revXMLNodeContents()"
      "revXMLNumberOfChildren()"
      "revXMLParent()"
      "revXMLPreviousSibling()"
      "revXMLRootNode()"
      "revXMLRPC_AddParam"
      "revXMLRPC_CreateRequest()"
      "revXMLRPC_DeleteAllDocuments"
      "revXMLRPC_DeleteDocument"
      "revXMLRPC_DeleteParam"
      "revXMLRPC_Documents()"
      "revXMLRPC_Error()"
      "revXMLRPC_Execute()"
      "revXMLRPC_Free"
      "revXMLRPC_FreeAll"
      "revXMLRPC_GetHost()"
      "revXMLRPC_GetMethod()"
      "revXMLRPC_GetParam()"
      "revXMLRPC_GetParamCount()"
      "revXMLRPC_GetParamNode()"
      "revXMLRPC_GetParamType()"
      "revXMLRPC_GetPath()"
      "revXMLRPC_GetPort()"
      "revXMLRPC_GetProtocol()"
      "revXMLRPC_GetRequest()"
      "revXMLRPC_GetResponse()"
      "revXMLRPC_GetSocket()"
      "revXMLRPC_SetHost"
      "revXMLRPC_SetMethod"
      "revXMLRPC_SetPath"
      "revXMLRPC_SetPort"
      "revXMLRPC_SetProtocol"
      "revXMLRPC_SetSocket"
      "revXMLStartTree"
      "revXMLText()"
      "revXMLTree()"
      "revXMLTrees()"
      "revXMLValidateDTD()"
      "revZipAddItemWithData"
      "revZipAddItemWithFile"
      "revZipAddUncompressedItemWithData"
      "revZipAddUncompressedItemWithFile"
      "revZipAddUncompressedItemWithFile"
      "revZipCancel"
      "revZipCloseArchive"
      "revZipDeleteItem"
      "revZipDescribeItem()"
      "revZipEnumerateItems()"
      "revZipExtractItemToFile"
      "revZipExtractItemToVariable"
      "revZipOpenArchive"
      "revZipOpenArchives()"
      "revZipRenameItem"
      "revZipReplaceItemWithData"
      "revZipReplaceItemWithFile"
      "revZipSetProgressCallback"
      "round"
      "rowDelimiter"
      "sampVariance()"
      "scriptExecutionError"
      "sec"
      "second"
      "seconds"
      "secs"
      "seek"
      "segment"
      "segments"
      "send"
      "sentence"
      "sentenceOffset()"
      "sentences"
      "set"
      "seven"
      "seventh"
      "sha1Digest()"
      "shell()"
      "shellCommand"
      "short"
      "sin"
      "six"
      "sixth"
      "slash"
      "socketClosed"
      "socketError"
      "socketTimeout"
      "socketTimeoutInterval"
      "sort"
      "space"
      "specialFolderPath()"
      "split"
      "sqrt()"
      "sslCertificates"
      "standardDeviation()"
      "start"
      "statRound()"
      "stdDev()"
      "stderr"
      "stdin"
      "stdout"
      "stop"
      "string"
      "subtract"
      "sum()"
      "switch"
      "sysError"
      "system"
      "systemVersion"
      "tab"
      "tan"
      "tempName"
      "ten"
      "tenth"
      "text"
      "textDecode()"
      "textEncode()"
      "the"
      "then"
      "there is a"
      "there is an"
      "there is no"
      "there is not a"
      "there is not an"
      "third"
      "this"
      "three"
      "throw"
      "tick"
      "ticks"
      "time"
      "to"
      "token"
      "tokenOffset()"
      "toLower()"
      "top"
      "toUpper()"
      "transpose()"
      "true"
      "trueWord"
      "truewordOffset()"
      "trueWords"
      "trunc()"
      "try"
      "twelveHourTime"
      "two"
      "uInt1"
      "uInt1s"
      "uInt2"
      "uInt2s"
      "uInt4"
      "uInt4s"
      "umask"
      "uniDecode()"
      "uniEncode()"
      "union"
      "unload"
      "until"
      "upper()"
      "URL"
      "URLDecode()"
      "URLEncode()"
      "URLStatus"
      "useSystemDate"
      "useUnicode"
      "using"
      "uuid()"
      "value()"
      "variableNames"
      "variance()"
      "version"
      "volumes"
      "wait"
      "waitDepth"
      "weekdayNames"
      "while"
      "whole"
      "wholeMatches"
      "with"
      "without"
      "word"
      "wordOffset()"
      "words"
      "wrap"
      "write"
      "xsltApplyStylesheet()"
      "xsltApplyStylesheetFromFile()"
      "xsltLoadStylesheet()"
      "xsltLoadStylesheetFromFile()"
      "zero"
      "$_SESSION"
      "$_SERVER"
      "$_COOKIE"
      "$_FILES"
      "$_GET"
      "$_GET_BINARY"
      "$_GET_RAW"
      "$_POST"
      "$_POST_BINARY"
      "$_POST_RAW"
    ]
    commentStart: "-- "

    # LiveCode Script
    #################

    ".source.livecodescript":
      'editor':
        'increaseIndentPattern': "(^on\\s+?.+)|(^command\\s+?.+)|(^function\\s+?.+)|(\\s*if\\s+?.+)|(\\s*else)|(\\s*repeat\\s+?.+)|(switch\\s+?.+)|(case\\s+?.+)|(\\s*(?<!end )try$)|(\\s*catch\\s+?.+)"
        'decreaseIndentPattern': "(\\s*end\\s+?.+)|(\\s*break$)|(\\s*else$)|(\\s*catch\\s+?.+)"
        'tabLength': 3
        'foldEndPattern': '^\\s*end\\b'
